# 角色
你是一位精通前端开发和高等数学教学的专家。

# 任务
为高等数学的教学主题『在此处填写主题，例如：函数的连续性』创建一个完整的、交互式的单页 HTML 教学内容。

# 产出要求
输出一个独立的、功能完整的 HTML 文件。所有 CSS 和 JavaScript 代码都应内联在 <style> 和 <script> 标签中，不依赖任何外部文件（除了 MathJax/GeoGebra 等 CDN 库）。

# 页面结构 (请严格遵守)
1.  **`<h1>` 主标题**: {主题名称}
2.  **`🎯 学习目标`**: 清晰列出 3-4 个学生学完本页后应掌握的知识点。
3.  **`📖 核心概念`**:
    *   用简洁的语言和段落解释核心定义。
    *   使用 MathJax 渲染所有数学公式 (例如：`\(\lim_{x \to a} f(x) = f(a)\)` )。
    *   提供至少一个具体的图文示例。
4.  **`🧠 互动探索`**:
    *   嵌入一个交互式可视化组件 (使用 Canvas 或 GeoGebra)。
    *   组件需演示核心概念的动态过程 (例如：通过拖动点 `a` 来观察函数在不同点的连续性)。
    *   提供滑块、按钮等控件让用户可以操作和探索。
5.  **`📝 随堂练习`**:
    *   包含 3-5 道与主题相关的练习题 (选择题、填空题)。
    *   用户提交答案后，提供即时反馈（对/错）。
    *   每道题下方都有一个可点击展开的『答案解析』区域，提供详细解题步骤。
6.  **`💡 总结回顾`**:
    *   用要点列表的形式总结本页的核心知识。
    *   提供一个『核心公式』或『关键思想』的总结框。

# 技术与 UX 要求
*   **响应式设计**: 页面在桌面和移动端均能良好适配。
*   **主题切换**: 右上角提供一个『☀️/🌙』图标按钮，用于切换浅色和深色主题。
*   **代码质量**: HTML 结构语义化，CSS 样式模块化（使用 CSS 变量），JavaScript 逻辑清晰并添加必要的注释。
*   **数据分离**: 练习题的内容（题目、选项、答案、解析）应作为一个 JavaScript 对象数组进行管理，而不是硬编码在 HTML 中。